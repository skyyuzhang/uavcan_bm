ARM GAS  /tmp/ccmRGjVG.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"usart.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.__io_putchar,"ax",%progbits
  16              		.align	1
  17              		.global	__io_putchar
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	__io_putchar:
  24              	.LFB66:
  25              		.file 1 "Src/usart.c"
   1:Src/usart.c   **** /**
   2:Src/usart.c   ****   ******************************************************************************
   3:Src/usart.c   ****   * File Name          : USART.c
   4:Src/usart.c   ****   * Description        : This file provides code for the configuration
   5:Src/usart.c   ****   *                      of the USART instances.
   6:Src/usart.c   ****   ******************************************************************************
   7:Src/usart.c   ****   * This notice applies to any and all portions of this file
   8:Src/usart.c   ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/usart.c   ****   * USER CODE END. Other portions of this file, whether 
  10:Src/usart.c   ****   * inserted by the user or by software development tools
  11:Src/usart.c   ****   * are owned by their respective copyright owners.
  12:Src/usart.c   ****   *
  13:Src/usart.c   ****   * Copyright (c) 2018 STMicroelectronics International N.V. 
  14:Src/usart.c   ****   * All rights reserved.
  15:Src/usart.c   ****   *
  16:Src/usart.c   ****   * Redistribution and use in source and binary forms, with or without 
  17:Src/usart.c   ****   * modification, are permitted, provided that the following conditions are met:
  18:Src/usart.c   ****   *
  19:Src/usart.c   ****   * 1. Redistribution of source code must retain the above copyright notice, 
  20:Src/usart.c   ****   *    this list of conditions and the following disclaimer.
  21:Src/usart.c   ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  22:Src/usart.c   ****   *    this list of conditions and the following disclaimer in the documentation
  23:Src/usart.c   ****   *    and/or other materials provided with the distribution.
  24:Src/usart.c   ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  25:Src/usart.c   ****   *    contributors to this software may be used to endorse or promote products 
  26:Src/usart.c   ****   *    derived from this software without specific written permission.
  27:Src/usart.c   ****   * 4. This software, including modifications and/or derivative works of this 
  28:Src/usart.c   ****   *    software, must execute solely and exclusively on microcontroller or
  29:Src/usart.c   ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  30:Src/usart.c   ****   * 5. Redistribution and use of this software other than as permitted under 
  31:Src/usart.c   ****   *    this license is void and will automatically terminate your rights under 
  32:Src/usart.c   ****   *    this license. 
  33:Src/usart.c   ****   *
ARM GAS  /tmp/ccmRGjVG.s 			page 2


  34:Src/usart.c   ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  35:Src/usart.c   ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  36:Src/usart.c   ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  37:Src/usart.c   ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  38:Src/usart.c   ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  39:Src/usart.c   ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  40:Src/usart.c   ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  41:Src/usart.c   ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  42:Src/usart.c   ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  43:Src/usart.c   ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  44:Src/usart.c   ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  45:Src/usart.c   ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  46:Src/usart.c   ****   *
  47:Src/usart.c   ****   ******************************************************************************
  48:Src/usart.c   ****   */
  49:Src/usart.c   **** 
  50:Src/usart.c   **** /* Includes ------------------------------------------------------------------*/
  51:Src/usart.c   **** #include "usart.h"
  52:Src/usart.c   **** 
  53:Src/usart.c   **** #include "gpio.h"
  54:Src/usart.c   **** 
  55:Src/usart.c   **** /* Private function prototypes -----------------------------------------------*/
  56:Src/usart.c   **** #ifdef __GNUC__
  57:Src/usart.c   **** /* With GCC, small printf (option LD Linker->Libraries->Small printf
  58:Src/usart.c   ****    set to 'Yes') calls __io_putchar() */
  59:Src/usart.c   **** #define PUTCHAR_PROTOTYPE int __io_putchar(int ch)
  60:Src/usart.c   **** #else
  61:Src/usart.c   **** #define PUTCHAR_PROTOTYPE int fputc(int ch, FILE *f)
  62:Src/usart.c   **** #endif /* __GNUC__ */
  63:Src/usart.c   **** /* USER CODE BEGIN 0 */
  64:Src/usart.c   **** 
  65:Src/usart.c   **** /* USER CODE END 0 */
  66:Src/usart.c   **** 
  67:Src/usart.c   **** UART_HandleTypeDef huart1;
  68:Src/usart.c   **** 
  69:Src/usart.c   **** PUTCHAR_PROTOTYPE
  70:Src/usart.c   **** {
  26              		.loc 1 70 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31 0000 00B5     		push	{lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 14, -4
  35 0002 83B0     		sub	sp, sp, #12
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 16
  38 0004 02A9     		add	r1, sp, #8
  39 0006 41F8040D 		str	r0, [r1, #-4]!
  71:Src/usart.c   ****   /* Place your implementation of fputc here */
  72:Src/usart.c   ****   /* e.g. write a character to the USART1 and Loop until the end of transmission */
  73:Src/usart.c   ****   HAL_UART_Transmit(&huart1, (uint8_t *)&ch, 1, 0xFFFF);
  40              		.loc 1 73 0
  41 000a 4FF6FF73 		movw	r3, #65535
  42 000e 0122     		movs	r2, #1
ARM GAS  /tmp/ccmRGjVG.s 			page 3


  43 0010 0348     		ldr	r0, .L3
  44              	.LVL1:
  45 0012 FFF7FEFF 		bl	HAL_UART_Transmit
  46              	.LVL2:
  74:Src/usart.c   **** 
  75:Src/usart.c   ****   return ch;
  76:Src/usart.c   **** }
  47              		.loc 1 76 0
  48 0016 0198     		ldr	r0, [sp, #4]
  49 0018 03B0     		add	sp, sp, #12
  50              	.LCFI2:
  51              		.cfi_def_cfa_offset 4
  52              		@ sp needed
  53 001a 5DF804FB 		ldr	pc, [sp], #4
  54              	.L4:
  55 001e 00BF     		.align	2
  56              	.L3:
  57 0020 00000000 		.word	huart1
  58              		.cfi_endproc
  59              	.LFE66:
  61              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
  62              		.align	1
  63              		.global	MX_USART1_UART_Init
  64              		.syntax unified
  65              		.thumb
  66              		.thumb_func
  67              		.fpu softvfp
  69              	MX_USART1_UART_Init:
  70              	.LFB67:
  77:Src/usart.c   **** /* USART1 init function */
  78:Src/usart.c   **** 
  79:Src/usart.c   **** void MX_USART1_UART_Init(void)
  80:Src/usart.c   **** {
  71              		.loc 1 80 0
  72              		.cfi_startproc
  73              		@ args = 0, pretend = 0, frame = 0
  74              		@ frame_needed = 0, uses_anonymous_args = 0
  75 0000 08B5     		push	{r3, lr}
  76              	.LCFI3:
  77              		.cfi_def_cfa_offset 8
  78              		.cfi_offset 3, -8
  79              		.cfi_offset 14, -4
  81:Src/usart.c   **** 
  82:Src/usart.c   ****   huart1.Instance = USART1;
  80              		.loc 1 82 0
  81 0002 0B48     		ldr	r0, .L9
  82 0004 0B4B     		ldr	r3, .L9+4
  83 0006 0360     		str	r3, [r0]
  83:Src/usart.c   ****   huart1.Init.BaudRate = 115200;
  84              		.loc 1 83 0
  85 0008 4FF4E133 		mov	r3, #115200
  86 000c 4360     		str	r3, [r0, #4]
  84:Src/usart.c   ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
  87              		.loc 1 84 0
  88 000e 0023     		movs	r3, #0
  89 0010 8360     		str	r3, [r0, #8]
  85:Src/usart.c   ****   huart1.Init.StopBits = UART_STOPBITS_1;
ARM GAS  /tmp/ccmRGjVG.s 			page 4


  90              		.loc 1 85 0
  91 0012 C360     		str	r3, [r0, #12]
  86:Src/usart.c   ****   huart1.Init.Parity = UART_PARITY_NONE;
  92              		.loc 1 86 0
  93 0014 0361     		str	r3, [r0, #16]
  87:Src/usart.c   ****   huart1.Init.Mode = UART_MODE_TX_RX;
  94              		.loc 1 87 0
  95 0016 0C22     		movs	r2, #12
  96 0018 4261     		str	r2, [r0, #20]
  88:Src/usart.c   ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  97              		.loc 1 88 0
  98 001a 8361     		str	r3, [r0, #24]
  89:Src/usart.c   ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
  99              		.loc 1 89 0
 100 001c C361     		str	r3, [r0, #28]
  90:Src/usart.c   ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 101              		.loc 1 90 0
 102 001e FFF7FEFF 		bl	HAL_UART_Init
 103              	.LVL3:
 104 0022 00B9     		cbnz	r0, .L8
 105              	.L5:
  91:Src/usart.c   ****   {
  92:Src/usart.c   ****     _Error_Handler(__FILE__, __LINE__);
  93:Src/usart.c   ****   }
  94:Src/usart.c   **** 
  95:Src/usart.c   **** }
 106              		.loc 1 95 0
 107 0024 08BD     		pop	{r3, pc}
 108              	.L8:
  92:Src/usart.c   ****   }
 109              		.loc 1 92 0
 110 0026 5C21     		movs	r1, #92
 111 0028 0348     		ldr	r0, .L9+8
 112 002a FFF7FEFF 		bl	_Error_Handler
 113              	.LVL4:
 114              		.loc 1 95 0
 115 002e F9E7     		b	.L5
 116              	.L10:
 117              		.align	2
 118              	.L9:
 119 0030 00000000 		.word	huart1
 120 0034 00380140 		.word	1073821696
 121 0038 00000000 		.word	.LC0
 122              		.cfi_endproc
 123              	.LFE67:
 125              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 126              		.align	1
 127              		.global	HAL_UART_MspInit
 128              		.syntax unified
 129              		.thumb
 130              		.thumb_func
 131              		.fpu softvfp
 133              	HAL_UART_MspInit:
 134              	.LFB68:
  96:Src/usart.c   **** 
  97:Src/usart.c   **** void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
  98:Src/usart.c   **** {
ARM GAS  /tmp/ccmRGjVG.s 			page 5


 135              		.loc 1 98 0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 24
 138              		@ frame_needed = 0, uses_anonymous_args = 0
 139              	.LVL5:
  99:Src/usart.c   **** 
 100:Src/usart.c   ****   GPIO_InitTypeDef GPIO_InitStruct;
 101:Src/usart.c   ****   if(uartHandle->Instance==USART1)
 140              		.loc 1 101 0
 141 0000 0268     		ldr	r2, [r0]
 142 0002 184B     		ldr	r3, .L18
 143 0004 9A42     		cmp	r2, r3
 144 0006 00D0     		beq	.L17
 145 0008 7047     		bx	lr
 146              	.L17:
  98:Src/usart.c   **** 
 147              		.loc 1 98 0
 148 000a 30B5     		push	{r4, r5, lr}
 149              	.LCFI4:
 150              		.cfi_def_cfa_offset 12
 151              		.cfi_offset 4, -12
 152              		.cfi_offset 5, -8
 153              		.cfi_offset 14, -4
 154 000c 87B0     		sub	sp, sp, #28
 155              	.LCFI5:
 156              		.cfi_def_cfa_offset 40
 157              	.LBB2:
 102:Src/usart.c   ****   {
 103:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspInit 0 */
 104:Src/usart.c   **** 
 105:Src/usart.c   ****   /* USER CODE END USART1_MspInit 0 */
 106:Src/usart.c   ****     /* USART1 clock enable */
 107:Src/usart.c   ****     __HAL_RCC_USART1_CLK_ENABLE();
 158              		.loc 1 107 0
 159 000e 03F55843 		add	r3, r3, #55296
 160 0012 9A69     		ldr	r2, [r3, #24]
 161 0014 42F48042 		orr	r2, r2, #16384
 162 0018 9A61     		str	r2, [r3, #24]
 163 001a 9B69     		ldr	r3, [r3, #24]
 164 001c 03F48043 		and	r3, r3, #16384
 165 0020 0193     		str	r3, [sp, #4]
 166 0022 019B     		ldr	r3, [sp, #4]
 167              	.LBE2:
 108:Src/usart.c   ****   
 109:Src/usart.c   ****     /**USART1 GPIO Configuration    
 110:Src/usart.c   ****     PA9     ------> USART1_TX
 111:Src/usart.c   ****     PA10     ------> USART1_RX 
 112:Src/usart.c   ****     */
 113:Src/usart.c   ****     GPIO_InitStruct.Pin = GPIO_PIN_9;
 168              		.loc 1 113 0
 169 0024 4FF40073 		mov	r3, #512
 170 0028 0293     		str	r3, [sp, #8]
 114:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 171              		.loc 1 114 0
 172 002a 0223     		movs	r3, #2
 173 002c 0393     		str	r3, [sp, #12]
 115:Src/usart.c   ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
ARM GAS  /tmp/ccmRGjVG.s 			page 6


 174              		.loc 1 115 0
 175 002e 0323     		movs	r3, #3
 176 0030 0593     		str	r3, [sp, #20]
 116:Src/usart.c   ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 177              		.loc 1 116 0
 178 0032 0D4D     		ldr	r5, .L18+4
 179 0034 02A9     		add	r1, sp, #8
 180 0036 2846     		mov	r0, r5
 181              	.LVL6:
 182 0038 FFF7FEFF 		bl	HAL_GPIO_Init
 183              	.LVL7:
 117:Src/usart.c   **** 
 118:Src/usart.c   ****     GPIO_InitStruct.Pin = GPIO_PIN_10;
 184              		.loc 1 118 0
 185 003c 4FF48063 		mov	r3, #1024
 186 0040 0293     		str	r3, [sp, #8]
 119:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 187              		.loc 1 119 0
 188 0042 0024     		movs	r4, #0
 189 0044 0394     		str	r4, [sp, #12]
 120:Src/usart.c   ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 190              		.loc 1 120 0
 191 0046 0494     		str	r4, [sp, #16]
 121:Src/usart.c   ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 192              		.loc 1 121 0
 193 0048 02A9     		add	r1, sp, #8
 194 004a 2846     		mov	r0, r5
 195 004c FFF7FEFF 		bl	HAL_GPIO_Init
 196              	.LVL8:
 122:Src/usart.c   **** 
 123:Src/usart.c   ****     /* USART1 interrupt Init */
 124:Src/usart.c   ****     HAL_NVIC_SetPriority(USART1_IRQn, 5, 0);
 197              		.loc 1 124 0
 198 0050 2246     		mov	r2, r4
 199 0052 0521     		movs	r1, #5
 200 0054 2520     		movs	r0, #37
 201 0056 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 202              	.LVL9:
 125:Src/usart.c   ****     HAL_NVIC_EnableIRQ(USART1_IRQn);
 203              		.loc 1 125 0
 204 005a 2520     		movs	r0, #37
 205 005c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 206              	.LVL10:
 126:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspInit 1 */
 127:Src/usart.c   **** 
 128:Src/usart.c   ****   /* USER CODE END USART1_MspInit 1 */
 129:Src/usart.c   ****   }
 130:Src/usart.c   **** }
 207              		.loc 1 130 0
 208 0060 07B0     		add	sp, sp, #28
 209              	.LCFI6:
 210              		.cfi_def_cfa_offset 12
 211              		@ sp needed
 212 0062 30BD     		pop	{r4, r5, pc}
 213              	.L19:
 214              		.align	2
 215              	.L18:
ARM GAS  /tmp/ccmRGjVG.s 			page 7


 216 0064 00380140 		.word	1073821696
 217 0068 00080140 		.word	1073809408
 218              		.cfi_endproc
 219              	.LFE68:
 221              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 222              		.align	1
 223              		.global	HAL_UART_MspDeInit
 224              		.syntax unified
 225              		.thumb
 226              		.thumb_func
 227              		.fpu softvfp
 229              	HAL_UART_MspDeInit:
 230              	.LFB69:
 131:Src/usart.c   **** 
 132:Src/usart.c   **** void HAL_UART_MspDeInit(UART_HandleTypeDef* uartHandle)
 133:Src/usart.c   **** {
 231              		.loc 1 133 0
 232              		.cfi_startproc
 233              		@ args = 0, pretend = 0, frame = 0
 234              		@ frame_needed = 0, uses_anonymous_args = 0
 235              	.LVL11:
 236 0000 08B5     		push	{r3, lr}
 237              	.LCFI7:
 238              		.cfi_def_cfa_offset 8
 239              		.cfi_offset 3, -8
 240              		.cfi_offset 14, -4
 134:Src/usart.c   **** 
 135:Src/usart.c   ****   if(uartHandle->Instance==USART1)
 241              		.loc 1 135 0
 242 0002 0268     		ldr	r2, [r0]
 243 0004 084B     		ldr	r3, .L24
 244 0006 9A42     		cmp	r2, r3
 245 0008 00D0     		beq	.L23
 246              	.LVL12:
 247              	.L20:
 136:Src/usart.c   ****   {
 137:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspDeInit 0 */
 138:Src/usart.c   **** 
 139:Src/usart.c   ****   /* USER CODE END USART1_MspDeInit 0 */
 140:Src/usart.c   ****     /* Peripheral clock disable */
 141:Src/usart.c   ****     __HAL_RCC_USART1_CLK_DISABLE();
 142:Src/usart.c   ****   
 143:Src/usart.c   ****     /**USART1 GPIO Configuration    
 144:Src/usart.c   ****     PA9     ------> USART1_TX
 145:Src/usart.c   ****     PA10     ------> USART1_RX 
 146:Src/usart.c   ****     */
 147:Src/usart.c   ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
 148:Src/usart.c   **** 
 149:Src/usart.c   ****     /* USART1 interrupt Deinit */
 150:Src/usart.c   ****     HAL_NVIC_DisableIRQ(USART1_IRQn);
 151:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspDeInit 1 */
 152:Src/usart.c   **** 
 153:Src/usart.c   ****   /* USER CODE END USART1_MspDeInit 1 */
 154:Src/usart.c   ****   }
 155:Src/usart.c   **** } 
 248              		.loc 1 155 0
 249 000a 08BD     		pop	{r3, pc}
ARM GAS  /tmp/ccmRGjVG.s 			page 8


 250              	.LVL13:
 251              	.L23:
 141:Src/usart.c   ****   
 252              		.loc 1 141 0
 253 000c 074A     		ldr	r2, .L24+4
 254 000e 9369     		ldr	r3, [r2, #24]
 255 0010 23F48043 		bic	r3, r3, #16384
 256 0014 9361     		str	r3, [r2, #24]
 147:Src/usart.c   **** 
 257              		.loc 1 147 0
 258 0016 4FF4C061 		mov	r1, #1536
 259 001a 0548     		ldr	r0, .L24+8
 260              	.LVL14:
 261 001c FFF7FEFF 		bl	HAL_GPIO_DeInit
 262              	.LVL15:
 150:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspDeInit 1 */
 263              		.loc 1 150 0
 264 0020 2520     		movs	r0, #37
 265 0022 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 266              	.LVL16:
 267              		.loc 1 155 0
 268 0026 F0E7     		b	.L20
 269              	.L25:
 270              		.align	2
 271              	.L24:
 272 0028 00380140 		.word	1073821696
 273 002c 00100240 		.word	1073876992
 274 0030 00080140 		.word	1073809408
 275              		.cfi_endproc
 276              	.LFE69:
 278              		.comm	huart1,64,4
 279              		.section	.rodata.MX_USART1_UART_Init.str1.4,"aMS",%progbits,1
 280              		.align	2
 281              	.LC0:
 282 0000 5372632F 		.ascii	"Src/usart.c\000"
 282      75736172 
 282      742E6300 
 283              		.text
 284              	.Letext0:
 285              		.file 2 "/usr/bin/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/machine/_default_types.h
 286              		.file 3 "/usr/bin/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_stdint.h"
 287              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 288              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 289              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 290              		.file 7 "/usr/bin/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/lock.h"
 291              		.file 8 "/usr/bin/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_types.h"
 292              		.file 9 "/usr/bin/gcc-arm-none-eabi-7-2017-q4-major/lib/gcc/arm-none-eabi/7.2.1/include/stddef.h"
 293              		.file 10 "/usr/bin/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/reent.h"
 294              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 295              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 296              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 297              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 298              		.file 15 "Inc/usart.h"
 299              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
ARM GAS  /tmp/ccmRGjVG.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usart.c
     /tmp/ccmRGjVG.s:16     .text.__io_putchar:0000000000000000 $t
     /tmp/ccmRGjVG.s:23     .text.__io_putchar:0000000000000000 __io_putchar
     /tmp/ccmRGjVG.s:57     .text.__io_putchar:0000000000000020 $d
                            *COM*:0000000000000040 huart1
     /tmp/ccmRGjVG.s:62     .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccmRGjVG.s:69     .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccmRGjVG.s:119    .text.MX_USART1_UART_Init:0000000000000030 $d
     /tmp/ccmRGjVG.s:126    .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccmRGjVG.s:133    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccmRGjVG.s:216    .text.HAL_UART_MspInit:0000000000000064 $d
     /tmp/ccmRGjVG.s:222    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccmRGjVG.s:229    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccmRGjVG.s:272    .text.HAL_UART_MspDeInit:0000000000000028 $d
     /tmp/ccmRGjVG.s:280    .rodata.MX_USART1_UART_Init.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_UART_Transmit
HAL_UART_Init
_Error_Handler
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_NVIC_DisableIRQ
